====================고칠것========================
post, user들어갈 때 경고뜨는거 해결 

1. 쿠키로 로그인 인증구현했는데 localStorage로 바꿀려고합니다. (쿠키별로맘에안들어가지고,, httponly사용하면 vue에서 못읽는것도있고)
2. 로그인시 화면 리로딩하는데 고것도 쿠키 -> localStorage 바꿔보고 수정할게요
   httpOnly에 cookie 저장 방식이 보안 측면에서는 더 낫고, 
   사용자가 로그인 상태인지 검증은 req에서 토큰 첨부해서 보내는지 확인하고
   첨부가 되어있고 인증이 되면 회원가입이랑 로그인쪽에 v-if로 분기걸고 닉네임 붙여서 출력
   기타 뭐 커뮤니티 게시글 추가하기 등등 해야할거같은데
====================추가할것======================
0. 회원가입 이미지받기
1. 게시글삭제
2. 게시글검색
3. 게시글, 유저정보 게시글상세페이지 등등 css적용필요
4. 유저정보, 게시글 업데이트
5. community에서 게시글정보불러올 때 user nickname불러오기

=====================해야할것======================
1. price페이지에서 아이템검색창 크기조절
   너비? 아니면 높이?
   (이것도 미디어쿼리라서 일단 생각안하고할게요)
2. 커뮤니티 검색창 스타일변경 (price랑 안겹치게)
3. 자동으로 새로고침될 때 정렬한거 안풀리게 만들기
4. 자동새로고침 reload수정
5. info-page 다시만들기
6. price페이지 데이터테이블 css바꾸기 (배경이랑 안맞음)
7. 커뮤니티 게시글업로드창꾸미기
8. 게시글 상세페이지 댓글기능넣기
9. user상세정보페이지 꾸미기
   레이아웃부터 잡아볼까
10. 미디어쿼리적용.. 이건 다만들고 생각해보는게..
    그럼 일단 완성부터 ㄱㄱ 이건 내가 생각해보겠음


=====================공부할거=================
1. 커뮤니티 텍스트 에디터는 tiptap 사용 예정
2. 미디어쿼리
3. css gride
4. webpack
https://zuminternet.github.io/images/portal/post/2019-07-08-ZUM-Webpack-dev-proxy-part2/dev_spa.png

=====================추가한거======================
==0404수정한것
1. server/models/users || posts에서 구조조금변경했어요
   (comunity에서 post정보 불러오면서 user.nickname도 같이불러오기위해서 associate지정하느라 조금바꿨는데 구글링하니까 지금바꾼방법대로 되있어가지고 혹시 형님이 하려고했던거 있으시면 바꿔주셔도됩니당
   원래는 init-models에서 할라했는데 안되가지고 각각의 모델페이지에서 관계지정했어요)

2. 원래 vuex에서 LOGIN체크하는거 만들다가 실패했는데 까먹고 안지웠던거라 (죄송합니다,,;) 형님적은거보고 vuex에서 로그인체크변수만들어놓고 사용할땐 컴포넌트에서 this.$store.state.isLogin으로 로그인체크하면됩니당

3. 페이지 라우팅 구조 변경
   기존구조 : api/login api/register api/logout으로 각각 요청받았는데 지금보니 매우 잘못된것같아서
   현재구조 : api/auth/login or register or logout으로 만들어가지고 auth에서 모두 처리함
   + 아이디중복체크 및 닉네임중복체크는 middleware에 만들어가지고 회원가입할때 라우터에 등록해줘서 알아서 처리하도록 구현했습니당.

4. server에다가 cookie-parser 설치했습니다 ( middleware에 isLoggedIn()에서 로그인체크하는데 여기서 쿠키필요해가지고 추가했습니다. (원랜쿠키하나라가지고 쿠키파서안썻는데 이제 두개라서 넣었어요))

5. user.id로 검사하던 모든거 user.nickname으로 검사하도록 수정함 

6. 게시글페이지 들어갔을경우 자신의 게시글일경우 update or delete버튼 나오게 구현..   게시글삭제까지 구현

7. 회원탈퇴추가

8. 게시글삭제시 커뮤니티페이지로 이동, 내정보페이지 링크추가, 로그아웃시 메인페이지로 이동



==해야할것
auth 미들웨어 완성


==0403 전달사항
nickName을 httpOnly를 풀고 그냥 쿠키로 설정해서 쏴주게 만듬
결과적으로 access_token(httpOnly: true), login_nickName(httpOnly: false) 2개 쿠키가 전송됨
/api/logout쪽에서다 get으로 쏴주면 로그아웃 되게 설정해놨는데
/store쪽 액션이나 fetch.js쪽 관련해서 글로 axios통해서 get으로 쏴주게좀 설정해줘
onLogout()에 일단 주석 싹 쳐놨고
vuex통해서 쿠키 날리고 로그인 되어있을때 로그아웃 뜨고 메인페이지 밑에 닉네임 뜨는거
그거 vuex에 isLogin인가 그걸로 분기타게 뭐 하면 될거같은데 한번 해볼래
오늘은 지쳐서 이만 퇴근







==scratch 여기부터 편집 ㄴㄴ 생각할꺼 정리용
JWT 관리용으로 redis를 쓸까...말까...
클라이언트에 안전한 저장소라는게 존재하긴 할까 
